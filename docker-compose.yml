version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: routerdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    depends_on:
      - router

  grafana:
    image: grafana/grafana:10.4.5
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/router-dashboard.json:/etc/grafana/provisioning/dashboards/router-dashboard.json
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus

  mock-agents:
    build: .
    command: python3 mock_agents.py
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  router:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/routerdb
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/routerdb
      - API_KEY=dev-key
      - LOG_LEVEL=INFO
      - MAX_LOGS_LIMIT=1000
      # Auto-replay configuration
      - ENABLE_AUTO_REPLAY=true
      - AUTO_REPLAY_INTERVAL=600
      - AUTO_REPLAY_BATCH_SIZE=50
      - MOCK_AGENTS_URL=http://mock-agents:8001
    depends_on:
      - db
      - mock-agents
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
